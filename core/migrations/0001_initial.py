# Generated by Django 4.2.16 on 2024-09-30 21:42

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("submission_text", models.TextField(blank=True, null=True)),
                ("submission_date", models.DateTimeField(blank=True, null=True)),
                ("feedback", models.TextField(blank=True, null=True)),
                ("ai_assist_used", models.BooleanField(default=False)),
                ("ai_assist_details", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="ClassStudent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enrollment_date", models.DateTimeField(auto_now_add=True)),
                (
                    "class_obj",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.classroom"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "title",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("description", models.TextField(max_length=500)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Kindergarten", "Kindergarten"),
                            ("Primary", "Primary"),
                            ("High School", "High School"),
                            ("University", "University"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "syllabus_structure",
                    models.CharField(
                        choices=[
                            ("full", "Full Syllabus"),
                            ("unit", "Unit-Wise"),
                            ("topic", "Topic-Based"),
                            ("customizable", "Customizable"),
                        ],
                        default="full",
                        max_length=20,
                    ),
                ),
                (
                    "syllabus_content",
                    models.CharField(
                        choices=[
                            ("core", "Core Syllabus"),
                            ("resources", "Additional Resources"),
                            ("assignments", "Assignments and Assessments"),
                            ("outcomes", "Learning Outcomes"),
                        ],
                        default="core",
                        max_length=20,
                    ),
                ),
                (
                    "syllabus_format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("word", "Word Document"),
                            ("google_doc", "Google Doc"),
                            ("html", "HTML"),
                        ],
                        default="pdf",
                        max_length=20,
                    ),
                ),
                (
                    "syllabus_availability",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("restricted", "Restricted"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                (
                    "syllabus_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("draft", "Draft"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "syllabus_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("requirements", models.TextField()),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("mpesa", "M-Pesa"), ("bank", "Bank Transfer")],
                        default="mpesa",
                        max_length=10,
                    ),
                ),
                (
                    "mpesa_phone_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("kcb", "Kenya Commercial Bank (KCB)"),
                            ("equity", "Equity Bank"),
                            ("cooperative", "Co-operative Bank"),
                            ("absa", "ABSA Bank Kenya"),
                            ("stanbic", "Stanbic Bank"),
                            ("nbk", "National Bank of Kenya"),
                            ("dtb", "Diamond Trust Bank"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DiscussionForumPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("post_content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enrollment_date", models.DateTimeField(auto_now_add=True)),
                ("payment_status", models.BooleanField(default=False)),
                ("completion_status", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Progress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modules_completed", models.IntegerField(default=0)),
                ("total_modules", models.IntegerField(default=0)),
                (
                    "progress_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Qualification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Secondary Education", "Secondary Education"),
                            ("Diploma", "Diploma"),
                            ("Bachelor's Degree", "Bachelor's Degree"),
                            ("Master's Degree", "Master's Degree"),
                            (
                                "Doctor of Philosophy (PhD)",
                                "Doctor of Philosophy (PhD)",
                            ),
                            ("Certificate", "Certificate"),
                            ("Professional Certificates", "Professional Certificates"),
                        ],
                        max_length=100,
                    ),
                ),
                ("institution", models.CharField(max_length=100)),
                ("date_awarded", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=10, primary_key=True, serialize=False
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("profile_picture", models.ImageField(upload_to="profile_pictures/")),
                (
                    "education_level",
                    models.CharField(
                        choices=[
                            ("Kindergarten", "Kindergarten"),
                            ("Primary", "Primary"),
                            ("High School", "High School"),
                            ("University", "University"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "fees_paid",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("total_fees", models.DecimalField(decimal_places=2, max_digits=10)),
                ("fee_status", models.BooleanField(default=False)),
                (
                    "remaining_fee",
                    models.DecimalField(
                        decimal_places=2, editable=False, max_digits=10
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("mpesa", "M-Pesa"), ("bank", "Bank Transfer")],
                        default="mpesa",
                        max_length=10,
                    ),
                ),
                (
                    "mpesa_phone_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("kcb", "Kenya Commercial Bank (KCB)"),
                            ("equity", "Equity Bank"),
                            ("cooperative", "Co-operative Bank"),
                            ("absa", "ABSA Bank Kenya"),
                            ("stanbic", "Stanbic Bank"),
                            ("nbk", "National Bank of Kenya"),
                            ("dtb", "Diamond Trust Bank"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "enrolled_courses",
                    models.ManyToManyField(through="core.Enrollment", to="core.course"),
                ),
                (
                    "progress",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_progress",
                        to="core.progress",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("languages", "Languages"),
                            ("sciences", "Sciences"),
                            ("social_sciences", "Social Sciences"),
                            ("arts", "Arts"),
                            ("technical_vocational", "Technical & Vocational"),
                            ("religious_studies", "Religious Studies"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=10, primary_key=True, serialize=False
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("profile_picture", models.ImageField(upload_to="profile_pictures/")),
                ("social_link", models.URLField(max_length=500)),
                (
                    "teaching_level",
                    models.CharField(
                        choices=[
                            ("Kindergarten", "Kindergarten"),
                            ("Primary", "Primary"),
                            ("High School", "High School"),
                            ("University", "University"),
                        ],
                        max_length=50,
                    ),
                ),
                ("experience_years", models.PositiveIntegerField()),
                ("certifications", models.FileField(upload_to="Certifications/")),
                ("status", models.BooleanField(default=True)),
                ("payment_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("mpesa", "M-Pesa"), ("bank", "Bank Transfer")],
                        max_length=10,
                    ),
                ),
                (
                    "mpesa_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "mpesa_user_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("kcb", "Kenya Commercial Bank (KCB)"),
                            ("equity", "Equity Bank"),
                            ("cooperative", "Co-operative Bank"),
                            ("absa", "ABSA Bank Kenya"),
                            ("stanbic", "Stanbic Bank"),
                            ("nbk", "National Bank of Kenya"),
                            ("dtb", "Diamond Trust Bank"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "net_salary",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "tax_deductions",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "loan_deductions",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("expertise_area", models.ManyToManyField(to="core.subject")),
                ("qualifications", models.ManyToManyField(to="core.qualification")),
                (
                    "students",
                    models.ManyToManyField(
                        through="core.ClassStudent", to="core.student"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("session_timestamp", models.DateTimeField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.discussionforumpost",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="progress",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="progresses",
                to="core.student",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_paid", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_fee", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_fully_paid", models.BooleanField(default=False)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("mpesa", "M-Pesa"), ("bank", "Bank Transfer")],
                        default="mpesa",
                        max_length=10,
                    ),
                ),
                (
                    "mpesa_phone_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("kcb", "Kenya Commercial Bank (KCB)"),
                            ("equity", "Equity Bank"),
                            ("cooperative", "Co-operative Bank"),
                            ("absa", "ABSA Bank Kenya"),
                            ("stanbic", "Stanbic Bank"),
                            ("nbk", "National Bank of Kenya"),
                            ("dtb", "Diamond Trust Bank"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="core.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("link", models.URLField(blank=True, null=True)),
                ("is_read", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="enrollment",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.student"
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="teacher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.teacher",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="subjects",
            field=models.ManyToManyField(related_name="courses", to="core.subject"),
        ),
        migrations.AddField(
            model_name="course",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="CodeEditor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.TextField()),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("python", "Python"),
                            ("java", "Java"),
                            ("c++", "C++"),
                            ("javascript", "JavaScript"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("submission_date", models.DateTimeField(auto_now_add=True)),
                ("output", models.TextField(blank=True, null=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.assignment",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.student"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="classstudent",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.student"
            ),
        ),
        migrations.AddField(
            model_name="classstudent",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
            ),
        ),
        migrations.AddField(
            model_name="classroom",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.course"
            ),
        ),
        migrations.AddField(
            model_name="classroom",
            name="students",
            field=models.ManyToManyField(
                through="core.ClassStudent", to="core.student"
            ),
        ),
        migrations.AddField(
            model_name="classroom",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
            ),
        ),
        migrations.CreateModel(
            name="CameraInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("session_date", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("students", models.ManyToManyField(to="core.student")),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="assignment",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.course"
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="student",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.student",
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                            ("exam", "Exam"),
                        ],
                        max_length=20,
                    ),
                ),
                ("max_score", models.IntegerField()),
                ("due_date", models.DateField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("full_name", models.CharField(max_length=255)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.assessment",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.student"
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "assessment")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="classstudent",
            unique_together={("class_obj", "student", "teacher")},
        ),
    ]
